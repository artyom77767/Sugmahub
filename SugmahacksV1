local Players, RunService, UserInputService, Lighting = game:GetService("Players"), game:GetService("RunService"), game:GetService("UserInputService"), game:GetService("Lighting")
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/lxte/lates-lib/main/Main.lua"))()
local Window = Library:CreateWindow({
    Title = "Sugmahack - Universal",
    Theme = "Dark",
    Size = UDim2.fromOffset(570, 370),
    Transparency = 0.2,
    Blurring = true,
    MinimizeKeybind = Enum.KeyCode.LeftAlt
})
local ESPEnabled, FullbrightEnabled, InfiniteJumpEnabled, TPWalkEnabled, TPWalkSpeed, MovementLoop = false, false, false, false, 1, nil
_G.JumpHeight = 50

-- Aimbot Variables
local aimbotEnabled, aimAtPart, wallCheckEnabled, targetNPCs, teamCheckEnabled = false, "HumanoidRootPart", false, false, false

-- ESP Function
local function a(b)
    if b and b:FindFirstChild("HumanoidRootPart") and b:FindFirstChild("Humanoid") then
        local c = Instance.new("BillboardGui", b.HumanoidRootPart)
        c.Size = UDim2.new(0, 200, 0, 50)
        c.StudsOffset = Vector3.new(0, 3, 0)
        c.AlwaysOnTop = true
        c.Name = "ESPTag"
        local d = Instance.new("TextLabel", c)
        d.Size = UDim2.new(1, 0, 1, 0)
        d.BackgroundTransparency = 1
        d.TextColor3 = Color3.fromRGB(255, 0, 0)
        d.TextStrokeTransparency = 0
        d.TextScaled = true
        local function e()
            if ESPEnabled and b and b:FindFirstChild("HumanoidRootPart") and b:FindFirstChild("Humanoid") then
                local f = (Players.LocalPlayer.Character.HumanoidRootPart.Position - b.HumanoidRootPart.Position).Magnitude
                local g = math.clamp(1 / (f / 50), 0.3, 1)
                c.Size = UDim2.new(0, 200 * g, 0, 50 * g)
                d.Text = string.format("%s | Health: %d | %.1f Studs", b.Name, math.floor(b.Humanoid.Health), f)
            else
                c:Destroy()
            end
        end
        RunService.RenderStepped:Connect(e)
    end
end

local function h()
    for i, j in pairs(Players:GetPlayers()) do
        if j.Character then
            a(j.Character)
        end
        j.CharacterAdded:Connect(a)
    end
    for k, l in pairs(workspace:GetDescendants()) do
        if l:IsA("Model") and l:FindFirstChild("HumanoidRootPart") and l:FindFirstChild("Humanoid") then
            if not l:FindFirstChild("HumanoidRootPart"):FindFirstChild("ESPTag") then
                a(l)
            end
        end
    end
end

-- Fullbright Functions
local LightingDefaults = {
    Brightness = Lighting.Brightness,
    ExposureCompensation = Lighting.ExposureCompensation,
    Ambient = Lighting.Ambient,
    OutdoorAmbient = Lighting.OutdoorAmbient,
    ColorShift_Top = Lighting.ColorShift_Top,
    FogEnd = Lighting.FogEnd,
    FogStart = Lighting.FogStart,
    FogColor = Lighting.FogColor,
    GlobalShadows = Lighting.GlobalShadows,
    Technology = Lighting.Technology
}
local function n()
    FullbrightEnabled = true
    Lighting.Brightness = 5
    Lighting.ExposureCompensation = 1
    Lighting.Ambient = Color3.fromRGB(200, 200, 200)
    Lighting.OutdoorAmbient = Color3.fromRGB(180, 180, 180)
    Lighting.ColorShift_Top = Color3.fromRGB(220, 240, 255)
    Lighting.FogEnd = 1000000
    Lighting.FogStart = 1000000
    Lighting.FogColor = Color3.fromRGB(255, 255, 255)
    Lighting.GlobalShadows = false
    Lighting.Technology = Enum.Technology.Compatibility
end
local function o()
    FullbrightEnabled = false
    for p, q in pairs(LightingDefaults) do
        Lighting[p] = q
    end
end
local function r(s, t)
    if s ~= nil then
        t(s)
    end
end

-- Infinite Jump Logic
UserInputService.InputBegan:Connect(function(u)
    if InfiniteJumpEnabled and u.UserInputType == Enum.UserInputType.Keyboard and u.KeyCode == Enum.KeyCode.Space then
        r(Players.LocalPlayer.Character.Humanoid, function(v)
            if v:GetState() == Enum.HumanoidStateType.Jumping or v:GetState() == Enum.HumanoidStateType.Freefall then
                r(v.Parent.HumanoidRootPart, function(w)
                    w.Velocity = Vector3.new(0, _G.JumpHeight, 0)
                end)
            end
        end)
    end
end)

-- Sugmawalk (Speedhack) using BodyVelocity for stealth
local function enableSpeedhack()
    local character = Players.LocalPlayer.Character
    local hrp = character and character:FindFirstChild("HumanoidRootPart")
    if hrp then
        local bv = Instance.new("BodyVelocity")
        bv.Name = "bv_speedhack"
        bv.MaxForce = Vector3.new(1e5, 0, 1e5) -- only horizontal
        bv.Velocity = Vector3.new(0, 0, 0)
        bv.Parent = hrp
        MovementLoop = RunService.RenderStepped:Connect(function(delta)
            local direction = Vector3.new(0, 0, 0)
            if UserInputService:IsKeyDown(Enum.KeyCode.W) then
                direction = direction + hrp.CFrame.LookVector
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.S) then
                direction = direction - hrp.CFrame.LookVector
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.A) then
                direction = direction - hrp.CFrame.RightVector
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.D) then
                direction = direction + hrp.CFrame.RightVector
            end
            if direction.Magnitude > 0 then
                direction = direction.Unit
                bv.Velocity = Vector3.new(direction.X * TPWalkSpeed, 0, direction.Z * TPWalkSpeed)
            else
                bv.Velocity = Vector3.new(0, 0, 0)
            end
        end)
    end
end
local function disableSpeedhack()
    if MovementLoop then
        MovementLoop:Disconnect()
        MovementLoop = nil
    end
    local character = Players.LocalPlayer.Character
    local hrp = character and character:FindFirstChild("HumanoidRootPart")
    if hrp then
        local bv = hrp:FindFirstChild("bv_speedhack")
        if bv then
            bv:Destroy()
        end
    end
end
UserInputService.InputBegan:Connect(function(E)
    if TPWalkEnabled then
        enableSpeedhack()
    end
end)
UserInputService.InputEnded:Connect(function(F)
    if not TPWalkEnabled then
        disableSpeedhack()
    end
end)

-- Tabs Setup
local MainTab = Window:AddTab({Title = "Main", Section = "Main", Icon = "rbxassetid://11963373994"})
local AimbotTab = Window:AddTab({Title = "Sugma Aim", Section = "Aimbot Features", Icon = "rbxassetid://4483345998"})

-- Main Tab Features
Window:AddToggle({Title = "Sugma vision", Description = "thingymajigger", Tab = MainTab, Callback = function(H)
    ESPEnabled = H
    if H then
        h()
    end
end})
Window:AddToggle({Title = "Sugmajump", Description = "thingymajigger", Tab = MainTab, Callback = function(I)
    InfiniteJumpEnabled = I
end})
Window:AddSlider({Title = "Sugmajump Height", Description = "thingymajigger", Tab = MainTab, MaxValue = 150, MinValue = 10, Callback = function(J)
    _G.JumpHeight = J
end})
Window:AddToggle({Title = "Sugmabright", Description = "thingymajigger", Tab = MainTab, Callback = function(K)
    if K then
        n()
    else
        o()
    end
end})
Window:AddToggle({Title = "Sugmawalk", Description = "thingymajigger", Tab = MainTab, Callback = function(L)
    TPWalkEnabled = L
    if not L then
        disableSpeedhack()
    end
end})
Window:AddSlider({Title = "Sugmawalk Speed", Description = "thingymajigger", Tab = MainTab, MaxValue = 50, MinValue = 1, Callback = function(M)
    TPWalkSpeed = M
end})
Window:Notify({Title = "thingymajigger", Description = "Sugmahack", Duration = 5})

-- Aimbot Functions
local aimConnection = nil
local lastTargetUpdate = 0
local currentTarget = nil

local function getClosestTarget()
    local Cam = workspace.CurrentCamera
    local localPlayer = Players.LocalPlayer
    local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
    local localRoot = character:WaitForChild("HumanoidRootPart")
    local nearestTarget = nil
    local shortestDistance = math.huge

    local function checkTarget(target)
        if target and target:IsA("Model") and target:FindFirstChild("Humanoid") and target:FindFirstChild(aimAtPart) then
            local targetRoot = target[aimAtPart]
            local distance = (targetRoot.Position - localRoot.Position).Magnitude
            if distance < shortestDistance then
                if wallCheckEnabled then
                    local rayDirection = (targetRoot.Position - Cam.CFrame.Position).Unit * 1000
                    local raycastParams = RaycastParams.new()
                    raycastParams.FilterDescendantsInstances = {character}
                    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
                    local raycastResult = workspace:Raycast(Cam.CFrame.Position, rayDirection, raycastParams)
                    if raycastResult and raycastResult.Instance:IsDescendantOf(target) then
                        shortestDistance = distance
                        nearestTarget = target
                    end
                else
                    shortestDistance = distance
                    nearestTarget = target
                end
            end
        end
    end

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= localPlayer and (not teamCheckEnabled or player.Team ~= localPlayer.Team) then
            checkTarget(player.Character)
        end
    end

    if targetNPCs then
        for _, npc in pairs(workspace:GetDescendants()) do
            checkTarget(npc)
        end
    end

    return nearestTarget
end

local function startAimbot()
    if aimConnection then aimConnection:Disconnect() end
    aimConnection = RunService.RenderStepped:Connect(function(delta)
        if aimbotEnabled then
            if tick() - lastTargetUpdate >= 0.1 then
                currentTarget = getClosestTarget()
                lastTargetUpdate = tick()
            end
            if currentTarget and currentTarget:FindFirstChild(aimAtPart) then
                workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, currentTarget[aimAtPart].Position)
            end
        end
    end)
end

local function stopAimbot()
    if aimConnection then
        aimConnection:Disconnect()
        aimConnection = nil
    end
end

-- Aimbot Tab Features
Window:AddDropdown({
    Title = "Sugma Aim Part",
    Description = "Choose where to aim",
    Tab = AimbotTab,
    Options = {
        ["Head"] = "Head",
        ["HumanoidRootPart"] = "HumanoidRootPart",
        ["Torso"] = "Torso"
    },
    Callback = function(selection)
        aimAtPart = selection
        warn("Aim Part set to: ", selection)
    end
})
Window:AddToggle({Title = "Enable Sugma Aim", Tab = AimbotTab, Callback = function(state)
    aimbotEnabled = state
    warn("Aimbot toggled: ", state)
    if state then
        startAimbot()
    else
        stopAimbot()
    end
end})
Window:AddToggle({Title = "Sugma Wall Check", Tab = AimbotTab, Callback = function(state)
    wallCheckEnabled = state
    warn("Wall Check toggled: ", state)
end})
Window:AddToggle({Title = "Sugma NPC Target", Tab = AimbotTab, Callback = function(state)
    targetNPCs = state
    warn("Target NPCs toggled: ", state)
end})
Window:AddToggle({Title = "Sugma Team Filter", Tab = AimbotTab, Callback = function(state)
    teamCheckEnabled = state
    warn("Team Check toggled: ", state)
end})

Window:Notify({Title = "thingymajigger", Description = "Sugmahack", Duration = 5})
