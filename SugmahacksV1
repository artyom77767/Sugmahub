local Players, RunService, UserInputService, Lighting = game:GetService("Players"), game:GetService("RunService"), game:GetService("UserInputService"), game:GetService("Lighting")
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/lxte/lates-lib/main/Main.lua"))()
local Window = Library:CreateWindow({Title = "Sugmahack - Universal", Theme = "Dark", Size = UDim2.fromOffset(570, 370), Transparency = 0.2, Blurring = true, MinimizeKeybind = Enum.KeyCode.LeftAlt})
local ESPEnabled, FullbrightEnabled, InfiniteJumpEnabled, TPWalkEnabled, TPWalkSpeed, MovementLoop = false, false, false, false, 1, nil
_G.JumpHeight = 50
local function a(b) if b and b:FindFirstChild("HumanoidRootPart") and b:FindFirstChild("Humanoid") then local c = Instance.new("BillboardGui", b.HumanoidRootPart) c.Size = UDim2.new(0, 200, 0, 50) c.StudsOffset = Vector3.new(0, 3, 0) c.AlwaysOnTop = true c.Name = "ESPTag" local d = Instance.new("TextLabel", c) d.Size = UDim2.new(1, 0, 1, 0) d.BackgroundTransparency = 1 d.TextColor3 = Color3.fromRGB(255, 0, 0) d.TextStrokeTransparency = 0 d.TextScaled = true local function e() if ESPEnabled and b and b:FindFirstChild("HumanoidRootPart") and b:FindFirstChild("Humanoid") then local f = (Players.LocalPlayer.Character.HumanoidRootPart.Position - b.HumanoidRootPart.Position).Magnitude local g = math.clamp(1 / (f / 50), 0.3, 1) c.Size = UDim2.new(0, 200 * g, 0, 50 * g) d.Text = string.format("%s | Health: %d | %.1f Studs", b.Name, math.floor(b.Humanoid.Health), f) else c:Destroy() end end RunService.RenderStepped:Connect(e) end end
local function h() for i, j in pairs(Players:GetPlayers()) do if j.Character then a(j.Character) end j.CharacterAdded:Connect(a) end for k, l in pairs(workspace:GetDescendants()) do if l:IsA("Model") and l:FindFirstChild("HumanoidRootPart") and l:FindFirstChild("Humanoid") then if not l:FindFirstChild("HumanoidRootPart"):FindFirstChild("ESPTag") then a(l) end end end end
local m = {Brightness = Lighting.Brightness, ExposureCompensation = Lighting.ExposureCompensation, Ambient = Lighting.Ambient, OutdoorAmbient = Lighting.OutdoorAmbient, ColorShift_Top = Lighting.ColorShift_Top, FogEnd = Lighting.FogEnd, FogStart = Lighting.FogStart, FogColor = Lighting.FogColor, GlobalShadows = Lighting.GlobalShadows, Technology = Lighting.Technology}
local function n() FullbrightEnabled = true Lighting.Brightness = 5 Lighting.ExposureCompensation = 1 Lighting.Ambient = Color3.fromRGB(200, 200, 200) Lighting.OutdoorAmbient = Color3.fromRGB(180, 180, 180) Lighting.ColorShift_Top = Color3.fromRGB(220, 240, 255) Lighting.FogEnd = 1000000 Lighting.FogStart = 1000000 Lighting.FogColor = Color3.fromRGB(255, 255, 255) Lighting.GlobalShadows = false Lighting.Technology = Enum.Technology.Compatibility end
local function o() FullbrightEnabled = false for p, q in pairs(m) do Lighting[p] = q end end
local function r(s, t) if s ~= nil then t(s) end end
UserInputService.InputBegan:Connect(function(u) if InfiniteJumpEnabled and u.UserInputType == Enum.UserInputType.Keyboard and u.KeyCode == Enum.KeyCode.Space then r(Players.LocalPlayer.Character.Humanoid, function(v) if v:GetState() == Enum.HumanoidStateType.Jumping or v:GetState() == Enum.HumanoidStateType.Freefall then r(v.Parent.HumanoidRootPart, function(w) w.Velocity = Vector3.new(0, _G.JumpHeight, 0) end) end end) end end)
local function x() if MovementLoop then return end MovementLoop = RunService.RenderStepped:Connect(function(y) local z, A = Players.LocalPlayer.Character, Players.LocalPlayer.Character and Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") if z and A then local B = Vector3.zero if UserInputService:IsKeyDown(Enum.KeyCode.W) then B = B + A.CFrame.LookVector end if UserInputService:IsKeyDown(Enum.KeyCode.S) then B = B - A.CFrame.LookVector end if UserInputService:IsKeyDown(Enum.KeyCode.A) then B = B - A.CFrame.RightVector end if UserInputService:IsKeyDown(Enum.KeyCode.D) then B = B + A.CFrame.RightVector end if B.Magnitude > 0 then B = B.Unit local C = A.CFrame + (B * TPWalkSpeed * y * 60) A.CFrame = A.CFrame:Lerp(C, 0.2) end end end) end
local function D() if MovementLoop then MovementLoop:Disconnect() MovementLoop = nil end end
UserInputService.InputBegan:Connect(function(E) if TPWalkEnabled then x() end end)
UserInputService.InputEnded:Connect(function(F) if not TPWalkEnabled then D() end end)
local G = Window:AddTab({Title = "Main", Section = "Main", Icon = "rbxassetid://11963373994"})
Window:AddToggle({Title = "Sugma vision", Description = "thingymajigger", Tab = G, Callback = function(H) ESPEnabled = H if H then h() end end})
Window:AddToggle({Title = "Sugmajump", Description = "thingymajigger", Tab = G, Callback = function(I) InfiniteJumpEnabled = I end})
Window:AddSlider({Title = "Sugmajump Height", Description = "thingymajigger", Tab = G, MaxValue = 150, MinValue = 10, Callback = function(J) _G.JumpHeight = J end})
Window:AddToggle({Title = "Sugmabright", Description = "thingymajigger", Tab = G, Callback = function(K) if K then n() else o() end end})
Window:AddToggle({Title = "Sugmawalk", Description = "thingymajigger", Tab = G, Callback = function(L) TPWalkEnabled = L end})
Window:AddSlider({Title = "Sugmawalk Speed", Description = "thingymajigger", Tab = G, MaxValue = 5, MinValue = 0.1, Callback = function(M) TPWalkSpeed = M end})
Window:Notify({Title = "thingymajigger", Description = "Sugmahack", Duration = 5})
